$date
   Mon Mar 11 22:45:28 2024
$end
$version
  2023.1
$end
$timescale
  1ps
$end
$scope module division_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 18 # numerator [17:0] $end
$var reg 18 $ denominator [17:0] $end
$var reg 1 % start $end
$var wire 18 & integer_result [17:0] $end
$var wire 18 ' reminder_result [17:0] $end
$var wire 1 ( done_flag $end
$scope module DUT $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 1 + start $end
$var wire 18 , num [17:0] $end
$var wire 18 - den [17:0] $end
$var wire 18 & res [17:0] $end
$var wire 18 ' rem [17:0] $end
$var reg 1 . done $end
$var reg 18 / num_r [17:0] $end
$var reg 18 0 den_r [17:0] $end
$var reg 18 1 result_integer [17:0] $end
$var reg 1 2 working $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
bx #
bx $
x%
bx &
bx '
x(
0)
1*
x+
bx ,
bx -
x.
bx /
bx 0
bx 1
x2
$end
#10000
1!
b0 &
b0 '
0(
1)
0.
b0 /
b0 0
b0 1
02
#15000
0"
b10001 #
b101 $
0*
b10001 ,
b101 -
#16000
1%
1+
#20000
0!
0)
#30000
1!
b10001 '
1)
b10001 /
b101 0
12
#36000
0%
0+
#40000
0!
0)
#50000
1!
b1 &
b1100 '
1)
b1100 /
b1 1
#60000
0!
0)
#70000
1!
b10 &
b111 '
1)
b111 /
b10 1
#80000
0!
0)
#90000
1!
b11 &
b10 '
1)
b10 /
b11 1
#100000
0!
0)
#110000
1!
1(
1)
1.
02
#120000
0!
0)
#130000
1!
1)
#140000
0!
0)
#150000
1!
1)
#160000
0!
0)
#170000
1!
1)
#180000
0!
0)
#190000
1!
1)
#200000
0!
0)
#210000
1!
1)
#220000
0!
0)
#230000
1!
1)
